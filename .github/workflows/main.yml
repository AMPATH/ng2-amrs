name: Ng2-amrs CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 10.x]

    steps:
      - uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm i
      - name: Install brfs
        run: npm i -g brfs
      - name: Linting
        run: npm run lint
      - name: Prettier check
        run: npm run prettier:check
      - name: Build prod
        run: npm run build-prod
      - name: Run headless tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm run test
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/ngx-amrs/
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Prepare Directory
        shell: bash
        run: |
          mkdir -p dist/@ampath-poc/${{ steps.extract_branch.outputs.branch }}
          mv dist/*.* dist/@ampath-poc/${{ steps.extract_branch.outputs.branch }}/
      - name: Publish to Digital Ocean
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --cache-control "max-age=31536000"
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          SOURCE_DIR: "dist"
      - name: Expose external URL
        uses: fjogeleit/http-request-action@master
        with:
          url: https://${{ secrets.AMPATH_CI_HOST }}/poc?branch=${{ steps.extract_branch.outputs.branch }}
          method: "GET"
          customHeaders: '{ "Accept": "application/json", "Content-Type": "application/json" }'
